{"version":3,"sources":["utils/UpdateUser.js","components/UserProfile/styles.js","components/UserProfile/index.js","components/AddExperienceCard/styles.js","components/AddExperienceCard/index.js","components/UserExperiences/styles.js","components/UserExperiences/index.js","components/SectionSelector/styles.js","components/SectionSelector/index.js","pages/UserPage/index.js"],"names":["UpdateUser","form","token","id","a","apiURL","fetch","method","mode","headers","Headers","Authorization","body","JSON","stringify","response","console","log","ProfileContainer","styled","section","media","tablet","mobile","Image","img","colors","backgroundColor","shadows","outsideShadow","Description","div","spacing","space3","space2","UserName","fonts","bigTitle","h1","space1","UserFom","UserInputs","TextArea","textarea","border","borderRadiusSmall","innerShadow","family","ImageInput","label","UserProfile","useState","userimage","setuserimage","dispatch","useDispatch","mousePosition","useGetMousePosition","useSelector","state","userReducer","userData","_id","username","description","image","userImage","userIcon","editing","setEditing","setForm","handleChange","e","target","name","value","preventDefault","status","showIndicator","message","Object","keys","setIndicatorPosition","getUserData","onSubmit","htmlFor","src","alt","type","onChange","URL","createObjectURL","files","placeholder","cols","rows","main","onClick","CardStyled","borderRadiusBig","AddExperienceCard","history","useHistory","click","push","ExperienceGrid","UserExperiences","experiencesDisplayed","selection","loading","LoadingCard","map","experience","ExperienceCard","inUser","Selector","titleColor","bold","SectionSelector","favorite","useEffect","setSelection","getFavoriteExperiences","tabIndex","getUserExperiences","Hero","Footer"],"mappings":"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","file":"static/js/8.0eb72336.chunk.js","sourcesContent":["const API = 'https://cozyplace.herokuapp.com/';\n\nexport const UpdateUser = async (form, token, id) => {\n  const apiURL = `${API}api/user/${id}`;\n  try {\n    const response = await fetch(apiURL, {\n      method: 'PUT',\n      mode: 'cors',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n        id: `${id}`,\n      }),\n      body: JSON.stringify(form),\n    });\n    return response;\n  } catch (error) {\n    console.log('Fetch Error', error);\n  }\n};\n","// ------------------------------ import libraries\nimport styled from 'styled-components';\n\n// ------------------------------ import variables\nimport {\n  colors,\n  spacing,\n  shadows,\n  fonts,\n  border,\n} from '../../global-styles/Variables';\nimport { media } from '../../global-styles/MediaQueries';\n\n// ------------------------------------ COMPONENTS ------------------------------------//\nexport const ProfileContainer = styled.section`\n  max-width: 1024px;\n  transform: translateY(-50%);\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n\n  ${media.tablet} {\n    max-width: 90%;\n  }\n\n  ${media.mobile} {\n    transform: translateY(-25%);\n    flex-direction: column;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  object-fit: cover;\n  background: ${colors.backgroundColor};\n  box-shadow: ${shadows.outsideShadow};\n`;\n\nexport const Description = styled.div`\n  margin-left: ${spacing.space3};\n\n  ${media.mobile} {\n    margin: 0;\n    margin-top: ${spacing.space2};\n  }\n\n  p {\n    margin: 0;\n    margin-top: ${spacing.space3};\n\n    ${media.mobile} {\n      text-align: center;\n    }\n  }\n`;\n\nexport const UserName = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: ${colors.backgroundColor};\n\n  ${media.mobile} {\n    width: 100%;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  h1 {\n    font-size: ${fonts.bigTitle};\n    margin: 0;\n\n    ${media.tablet} {\n      font-size: 35px;\n    }\n\n    ${media.mobile} {\n      font-size: ${fonts.h1};\n      margin: ${spacing.space1} 0;\n    }\n  }\n\n  button {\n    ${media.mobile} {\n      margin: 0;\n    }\n  }\n`;\n\nexport const UserFom = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n\n  ${media.mobile} {\n    margin-top: ${spacing.space2};\n    flex-direction: column;\n  }\n\n  div {\n    position: relative;\n    width: 80%;\n\n    ${media.mobile} {\n      width: 100%;\n    }\n  }\n\n  button {\n    position: absolute;\n    right: 0;\n    top: 15%;\n\n    ${media.mobile} {\n      position: relative;\n      margin: 0;\n    }\n  }\n`;\n\nexport const UserInputs = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  ${media.mobile} {\n    margin: 0 auto;\n    margin-top: ${spacing.space2};\n    flex-direction: column;\n  }\n\n  input {\n    margin-right: ${spacing.space2};\n    flex-grow: 1;\n\n    ${media.mobile} {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const TextArea = styled.textarea`\n  height: 60px;\n  width: 100%;\n  margin-top: ${spacing.space3};\n  padding: ${spacing.space2};\n  border: ${border.border};\n  border-radius: ${border.borderRadiusSmall};\n  box-shadow: ${shadows.innerShadow};\n  outline: none;\n  font-family: ${fonts.family};\n\n  ${media.mobile} {\n    margin-top: ${spacing.space1};\n    margin-bottom: ${spacing.space2};\n  }\n`;\n\nexport const ImageInput = styled.label`\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  box-shadow: ${shadows.outsideShadow};\n  background: ${colors.backgroundColor};\n  cursor: pointer;\n  overflow: hidden;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    position: relative;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  input {\n    display: none;\n  }\n`;\n","// ------------------------------ import libraries\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// ------------------------------ import components\nimport { UpdateUser } from '../../utils/UpdateUser';\nimport { useGetMousePosition } from '../../hooks/useGetMousePosition';\n\n// ------------------------------ import styles and images\nimport {\n  ProfileContainer,\n  Image,\n  UserName,\n  Description,\n  TextArea,\n  UserFom,\n  ImageInput,\n  UserInputs,\n} from './styles';\nimport { Button } from '../../global-styles/Buttons';\nimport { InputText } from '../../global-styles/Inputs';\nimport userIcon from '../../assets/images/userIcon.svg';\n\n// ------------------import redux actions\nimport { getUserData } from '../../actions/userActions';\nimport {\n  showIndicator,\n  setIndicatorPosition,\n} from '../../actions/experiencesActions';\n\n// ------------------------------------ COMPONENT ------------------------------------//\n// this is the user data section.\n// user can see and edit his information\n\nexport const UserProfile = () => {\n  const [userimage, setuserimage] = useState('');\n  const dispatch = useDispatch();\n  const mousePosition = useGetMousePosition();\n\n  const {\n    token,\n    _id,\n    username,\n    description = 'tell us about you',\n    image,\n  } = useSelector((state) => state.userReducer.userData);\n  const userImage = image === '' ? userIcon : image;\n\n  const [editing, setEditing] = useState(false);\n  const [form, setForm] = useState({ _id });\n\n  function handleChange(e) {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  }\n\n  function handleFiles(e) {\n    setuserimage(URL.createObjectURL(e.target.files[0]));\n    setForm({\n      ...form,\n      [e.target.name]: e.target.files[0],\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const response = await UpdateUser(form, token, _id);\n    if (response.status === 200) {\n      dispatch(\n        showIndicator({\n          status: true,\n          message: `You edited your ${Object.keys(\n            form,\n          )} succesfully 🎉`,\n        }),\n      );\n      dispatch(setIndicatorPosition(mousePosition));\n\n      dispatch(getUserData(_id, token));\n      setEditing(false);\n    }\n  }\n\n  return (\n    <>\n      <ProfileContainer>\n        {/* the button allow the user to edit his data. this is the validation to show the form when user wants to edit  */}\n        {editing ? (\n          <UserFom onSubmit={handleSubmit}>\n            <ImageInput htmlFor=\"picture\">\n              {userimage ? (\n                <img src={userimage} alt={username} />\n              ) : (\n                <img src={userIcon} alt=\"edit user data\" />\n              )}\n              <input\n                type=\"file\"\n                name=\"image\"\n                id=\"picture\"\n                onChange={handleFiles}\n              />\n            </ImageInput>\n            <div>\n              <UserInputs>\n                <InputText\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"User Name\"\n                  onChange={handleChange}\n                />\n                <InputText\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  onChange={handleChange}\n                />\n              </UserInputs>\n              <TextArea\n                name=\"description\"\n                cols=\"30\"\n                rows=\"10\"\n                placeholder=\"Tell us about you\"\n                onChange={handleChange}\n              />\n            </div>\n            <Button type=\"submit\" main>\n              done\n            </Button>\n          </UserFom>\n        ) : (\n          <>\n            <Image src={userImage} alt={username} />\n            <Description>\n              <UserName>\n                <h1>{username}</h1>\n                <Button main onClick={() => setEditing(!editing)}>\n                  edit\n                </Button>\n              </UserName>\n              <p>{description}</p>\n            </Description>\n          </>\n        )}\n      </ProfileContainer>\n    </>\n  );\n};\n","// ------------------------------ import libraries\nimport styled from 'styled-components';\n\n// ------------------------------ import variables\nimport {\n  border,\n  shadows,\n  spacing,\n} from '../../global-styles/Variables';\nimport { media } from '../../global-styles/MediaQueries';\n\n// ------------------------------------ COMPONENTS ------------------------------------//\nexport const CardStyled = styled.section`\n  position: relative;\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: ${border.border};\n  border-radius: ${border.borderRadiusBig};\n  box-shadow: ${shadows.outsideShadow};\n  outline: none;\n\n  ${media.tablet} {\n    height: 300px;\n  }\n\n  ${media.mobile} {\n    height: 200px;\n  }\n\n  h3 {\n    margin-bottom: ${spacing.space3};\n\n    ${media.mobile} {\n      margin-bottom: ${spacing.space1};\n    }\n  }\n`;\n","// ------------------------------ import libraries\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// ------------------------------ import components\nimport { Icon } from '../Icons';\n\n// ------------------------------ import styles and images\nimport { CardStyled } from './styles';\n\n// ------------------------------------ COMPONENT ------------------------------------//\n\nexport const AddExperienceCard = () => {\n  const history = useHistory();\n\n  function handleClick() {\n    history.push('/create-experience');\n  }\n  return (\n    <CardStyled>\n      <h3>Add an experience</h3>\n      <Icon type=\"plus\" click={handleClick} />\n    </CardStyled>\n  );\n};\n","// ------------------------------ import libraries\nimport styled from 'styled-components';\n\n// ------------------------------ import variables\nimport { spacing } from '../../global-styles/Variables';\nimport { media } from '../../global-styles/MediaQueries';\n\n// ------------------------------------ COMPONENTS ------------------------------------//\n\nexport const ExperienceGrid = styled.div`\n  margin: ${spacing.space3} auto;\n  display: grid;\n  max-width: 800px;\n  grid-template-columns: repeat(3, 1fr);\n  gap: ${spacing.space3};\n\n  ${media.tablet} {\n    max-width: 90%;\n  }\n\n  ${media.mobile} {\n    max-width: 80%;\n    grid-template-columns: 1fr;\n  }\n`;\n","// ------------------------------ import libraries\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\n// ------------------------------ import components\nimport { ExperienceCard } from '../ExperienceCard';\nimport { AddExperienceCard } from '../AddExperienceCard';\nimport { LoadingCard } from '../LoadingCard';\n\n// ------------------------------ import styles and images\nimport { ExperienceGrid } from './styles';\n\n// ------------------------------------ COMPONENT ------------------------------------//\n// description of the component.\nexport const UserExperiences = () => {\n  const { experiencesDisplayed, selection, loading } = useSelector(\n    (state) => state.userReducer,\n  );\n\n  return (\n    <ExperienceGrid>\n      {loading ? (\n        <LoadingCard />\n      ) : (\n        experiencesDisplayed?.map((experience) => (\n          <ExperienceCard\n            inUser\n            key={experience._id}\n            {...experience}\n          />\n        ))\n      )}\n      {selection === 'my experiences' ? <AddExperienceCard /> : null}\n    </ExperienceGrid>\n  );\n};\n","// ------------------------------ import libraries\nimport styled, { css } from 'styled-components';\nimport { media } from '../../global-styles/MediaQueries';\n\n// ------------------------------ import variables\nimport {\n  border,\n  colors,\n  fonts,\n  shadows,\n  spacing,\n} from '../../global-styles/Variables';\n\n// ------------------------------------ COMPONENTS ------------------------------------//\n\nexport const Selector = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${spacing.space3};\n\n  ${media.tablet} {\n    margin: 0;\n  }\n  ${media.mobile} {\n    flex-direction: column;\n    margin: 0;\n    text-align: center;\n  }\n\n  h3 {\n    position: relative;\n    margin: 0 ${spacing.space3};\n    padding: ${spacing.space1} ${spacing.space2};\n    color: ${colors.titleColor};\n    font-weight: ${fonts.bold};\n    border-radius: ${border.borderRadiusSmall};\n    border: 1px solid ${colors.titleColor};\n    transition: 0.3s;\n    cursor: pointer;\n    outline: none;\n\n    ${media.mobile} {\n      margin-bottom: ${spacing.space2};\n    }\n\n    &:hover {\n      transform: scale(1.05);\n    }\n\n    &:focus {\n      color: ${colors.backgroundColor};\n      background: ${colors.titleColor};\n      box-shadow: ${shadows.outsideShadow};\n    }\n  }\n`;\n","// ------------------------------ import libraries\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// ------------------------------ import styles and images\nimport { Selector } from './styles';\n\n// -------- import redux actions\nimport {\n  getFavoriteExperiences,\n  getUserExperiences,\n  setSelection,\n} from '../../actions/userActions';\n\n// ------------------------------------ COMPONENT ------------------------------------//\n// description of the component.\nexport const SectionSelector = () => {\n  const dispatch = useDispatch();\n\n  const { _id, token, favorite } = useSelector(\n    (state) => state.userReducer.userData,\n  );\n\n  useEffect(() => {\n    dispatch(setSelection('favorites'));\n    dispatch(getFavoriteExperiences(_id, token));\n  }, [favorite]);\n\n  function setMyExperiences() {\n    dispatch(setSelection('my experiences'));\n    dispatch(getUserExperiences(_id, token));\n  }\n  function setFavorites() {\n    dispatch(setSelection('favorites'));\n    dispatch(getFavoriteExperiences(_id, token));\n  }\n\n  return (\n    <Selector>\n      <h3 tabIndex=\"0\" onClick={setFavorites}>\n        Favorites\n      </h3>\n      <h3 tabIndex=\"0\" onClick={setMyExperiences}>\n        My experiences\n      </h3>\n    </Selector>\n  );\n};\n","// ------------------------------ import libraries\nimport React from 'react';\n\n// ------------------------------ import components\nimport { Hero } from '../../components/Hero';\nimport { UserProfile } from '../../components/UserProfile';\nimport { Footer } from '../../components/Footer';\nimport { UserExperiences } from '../../components/UserExperiences';\nimport { SectionSelector } from '../../components/SectionSelector';\nimport { ResulIndicator } from '../../components/ResultIndicator';\n\n// ------------------------------------ COMPONENT ------------------------------------//\n// this page has the user data\n// it has two sections, fvorites and created experiences\n//user can create experiences from the created experiences section\n\nexport default () => {\n  return (\n    <>\n      <ResulIndicator />\n      <Hero />\n      <UserProfile />\n      <SectionSelector />\n      <UserExperiences />\n      <Footer />\n    </>\n  );\n};\n"],"sourceRoot":""}